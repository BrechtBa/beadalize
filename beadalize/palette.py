from functools import lru_cache

import numpy as np
import matplotlib.pyplot as plt


class Palette:
    def __init__(self, colors):
        self.colors = colors

    def subset(self, index):
        return Palette([self.colors[i] for i in index])

    @staticmethod
    def distance(color1: tuple, color2: tuple):
        from colormath.color_objects import sRGBColor, LabColor
        from colormath.color_conversions import convert_color
        from colormath.color_diff import delta_e_cie2000

        color1_rgb = sRGBColor(*color1)
        color2_rgb = sRGBColor(*color2)

        color1_lab = convert_color(color1_rgb, LabColor)
        color2_lab = convert_color(color2_rgb, LabColor)

        return delta_e_cie2000(color1_lab, color2_lab)

    @lru_cache(maxsize=1024)
    def nearest(self, color):
        dists = [self.distance(tuple(color), tuple(c)) for c in self.colors]
        val, index = min((val, idx) for (idx, val) in enumerate(dists))
        return self.colors[index]

    def plot(self, ax=None):
        if ax is None:
            ax = plt.gca()
        ax.imshow(np.expand_dims(np.array(self.colors), 0), extent=[0, len(self.colors), 0, 1])


hama_color_palette = Palette([
    [0.9764706, 0.9764706, 0.972549],
    [0.9647059, 0.92941177, 0.7647059],
    [0.9764706, 0.8627451, 0.18039216],
    [0.9137255, 0.30588236, 0.15686275],
    [0.7294118, 0.13333334, 0.15686275],
    [0.8901961, 0.5176471, 0.5921569],
    [0.3254902, 0.19215687, 0.5176471],
    [0.14901961, 0.24705882, 0.5647059],
    [0.10980392, 0.39607844, 0.6862745],
    [0.01176471, 0.21176471, 0.10196079],
    [0.00784314, 0.26666668, 0.19215687],

    [0.36862746, 0.25882354, 0.21960784],
    [0.7176471 , 0.13725491, 0.16078432],
    [0.8509804 , 0.6627451 , 0.13725491],
    [0.        , 0.5294118 , 0.7019608 ],
    [0.2       , 0.7058824 , 0.4745098 ],
    [0.5176471 , 0.5254902 , 0.52156866],
    [0.11372549, 0.10980392, 0.10588235],
    [0.85882354, 0.87058824, 0.87058824],
    [0.5176471 , 0.20392157, 0.14117648],
    [0.7294118 , 0.41960785, 0.27450982],
    [0.6431373 , 0.12941177, 0.17254902],

    [0.3882353 , 0.28235295, 0.5882353 ],
    [0.9098039 , 0.6627451 , 0.5764706 ],
    [0.85490197, 0.7294118 , 0.627451  ],
    [0.21960784, 0.30980393, 0.22745098],
    [0.8235294 , 0.12156863, 0.30588236],
    [0.31764707, 0.08235294, 0.10980392],
    [0.15294118, 0.40784314, 0.43529412],
    [0.92156863, 0.20784314, 0.44705883],
    [0.9137255 , 0.18431373, 0.23137255],
    [0.78431374, 0.84313726, 0.15686275],
    [0.9137255 , 0.14901961, 0.2509804 ],

    [0.07450981, 0.3254902 , 0.63529414],
    [0.32156864, 0.7176471 , 0.3529412 ],
    [0.94509804, 0.5058824 , 0.11764706],
    [0.28235295, 0.7019608 , 0.30980393],
    [0.79607844, 0.7294118 , 0.24313726],
    [0.9137255 , 0.38431373, 0.36078432],
    [0.22352941, 0.13725491, 0.34509805],
    [0.01960784, 0.4627451 , 0.7254902 ],
    [0.44313726, 0.7411765 , 0.3372549 ],
    [0.8039216 , 0.48235294, 0.6862745 ],
    [0.07843138, 0.70980394, 0.8039216 ],

    [0.9647059 , 0.6666667 , 0.21176471],
    [0.654902  , 0.6745098 , 0.6784314 ],
    [0.28627452, 0.2901961 , 0.28627452],
    [0.83137256, 0.5294118 , 0.7176471 ],
    [0.01568628, 0.7176471 , 0.8392157 ],
    [0.53333336, 0.5058824 , 0.7294118 ],
    [0.2627451 , 0.18431373, 0.14901961],
    [0.5647059 , 0.4392157 , 0.36862746],

    [0.85882354, 0.85882354, 0.8352941 ],
    [0.92941177, 0.72156864, 0.6313726 ],
    [0.69803923, 0.76862746, 0.81960785],
    [0.7411765 , 0.43137255, 0.2784314 ],
    [0.28235295, 0.28235295, 0.28627452],
    [0.16078432, 0.12941177, 0.09803922],
    [0.7764706 , 0.7529412 , 0.72156864],
])


a = np.linspace(0, 1, 4)
R, G, B = np.meshgrid(a, a, a)
rgb_64_palette = Palette(list(zip(R.flatten(), G.flatten(), B.flatten())))
